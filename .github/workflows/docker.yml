name: Publish Docker image
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MY_API_KEY: ${{ secrets.MY_API_KEY }}
      GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
      GEMINI_PRO_API_KEY: ${{ secrets.GEMINI_PRO_API_KEY }}
      REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
      CLOUDINARY_URL: ${{ secrets.CLOUDINARY_URL }}
      YOUTUBE_DEVELOPER_KEY: ${{ secrets.YOUTUBE_DEVELOPER_KEY }}
      TESSDATA_PREFIX: "/usr/local/share/tessdata"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: charlesozo/omnicron

      - name: Build and push Golang Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            MY_API_KEY=${{ env.MY_API_KEY }}
            GROK_API_KEY=${{ env.GROK_API_KEY }}
            GEMINI_PRO_API_KEY=${{ env.GEMINI_PRO_API_KEY }}
            REPLICATE_API_TOKEN=${{ env.REPLICATE_API_TOKEN }}
            CLOUDINARY_URL=${{ env.CLOUDINARY_URL }}
            YOUTUBE_DEVELOPER_KEY=${{ env.YOUTUBE_DEVELOPER_KEY }}
            TESSDATA_PREFIX=${{ env.TESSDATA_PREFIX }}
